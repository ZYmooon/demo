1.说说你对闭包的理解
闭包就是指函数可以记住并访问所在的词法作用域，并且保持着对词法作用域的引用，即使函数在当前作用域之外执行，就会形成闭包。
对于闭包的形成，实质上就是所涉及的词法作用域和将函数作为值return
当在函数内部声明了内部函数，并将内部函数作为值返回，就会产生闭包。
在本质上，闭包就是将函数内部和函数外部连接起来的一座桥梁。


用立即执行函数来解决闭包带来的问题 因为立即执行函数可以产生一个新的作用域

JS 的函数内部可以使用函数外部的变量，所以这段代码正好符合了闭包的定义
（暴露局部变量，使外部可以使用局部变量）

2.谈谈ng与vue的区别

3.我看你用过webpack，那你知道grunt吗？grunt有哪些功能？

4.你公司用git还是svn

5.单页面，你们用什么实现？

6.你提到用iframe来实现，那iframe的内存泄露你知道吗？

7.谈谈js的作用域

只有函数作用域
全局作用域：全局变量有全局作用域，网页中所有脚本和函数均可使用，我们要避免使用全局作用域或者不使用全局变量。

局部作用域：因为局部变量只作用于函数内，所以不同的函数可以使用相同名称的变量。局部变量在函数开始执行时创建，函数执行完后局部变量会自动销毁。

7A.服务器端推送数据用过吗？ websoket

之前的面试

8.jsonp 原理
JSONP
html中script标签可以引入其他域下的js，比如引入线上的jquery库。利用这个特性，可实现跨域访问接口。需要后端支持

echo $cb . '&&' . $cb . '(' . json_encode($ret) . ')';
定义数据处理函数_fun
创建script标签，src的地址执行后端接口，最后加个参数callback=_fun
服务端在收到请求后，解析参数，计算返还数据，输出 fun(data) 字符串。
fun(data)会放到script标签做为js执行。此时会调用fun函数，将data做为参数。

CORS
CORS 全称是跨域资源共享（Cross-Origin Resource Sharing），是一种 ajax 跨域请求资源的方式，支持现代浏览器，IE支持10以上。 实现方式很简单，当你使用 XMLHttpRequest 发送请求时，浏览器发现该请求不符合同源策略，会给该请求加一个请求头：Origin，后台进行一系列处理，如果确定接受请求则在返回结果中加入一个响应头：Access-Control-Allow-Origin; 浏览器判断该相应头中是否包含 Origin 的值，如果有则浏览器会处理响应，我们就可以拿到响应数据，如果不包含浏览器直接驳回，这时我们无法拿到响应数据。所以 CORS 的表象是让你觉得它与同源的 ajax 请求没啥区别，代码完全一样。

降域
范例:

a.html
b.html
参考
wikipedia-JSONP
wikipedia-CORS


9.canvas写一个图片移动

10.AMD,CMD讲一下

11.node.js连接数据库

12.获取浏览器版本
navigator.userAgent

13.localstroage设置有效期

14.ajax控制request控制request header头部

15.前后端分离 放到同一域名下

16.mui兼容性怎么样？

17.有一个日期控件想扩充显示假期的功能，你如何做呢？

18.如何获取url的参数
function getQueryVariable(variable)
{
       var query = window.location.search.substring(1);
       var vars = query.split("&");
       for (var i=0;i<vars.length;i++) {
               var pair = vars[i].split("=");
               if(pair[0] == variable){return pair[1];}
       }
       return(false);
}

19.box_shadow 各个游览器写法有什么区别



20.各个游览器内核是什么
Trident(IE内核)，Gecko(Firefox内核)，Webkit(Safari内核,Chrome内核原型,开源)
不同的浏览器还有自己的JavaScript引擎
Chakra  查克拉，IE9启用的新的JavaScript引擎。
SpiderMonkey / TraceMonkey / JaegerMonkey  火狐
V8  应用于Chrome、傲游3。
Nitro  应用于Safari 4及后续的版本。 


21.定位geclocation

22.nodejs连接数据库

23.设计模式 工厂模式 单例模式
https://www.jianshu.com/p/b879ab6e5506


24.ftp端口是多少
FTP的端口是 21 
SSH (Secure Shell)服务使用tcp 22 端口
TELNET  23 端口
DHCP server的端口号是67 
MAIL 的端口号是25\110 
pop3\smtp 的端口号是 110/25 
DNS 的端口号是 53
HTTP通信用的端口号是80
SMMP:性能测试标准方法
mysql默认端口是3306 
Sql服务的默认端口. 3389
tomcat默认端口是8080
windows远程终端 的端口号是3389 
 

25.angular双向数据原理，指令

26.vue生命周期

27.实现继承，原型链，闭包原理及应用。this指向题目

闭包是指有权访问另一个函数作用域中变量的函数，创建闭包的最常见的方式就是在一个函数内创建另一个函数，通过另一个函数访问这个函数的局部变量,利用闭包可以突破作用链域，将函数内部的变量和方法传递到外部。
 1.函数内再嵌套函数
 2.内部函数可以引用外层的参数和变量
 3.参数和变量不会被垃圾回收机制回收


this总是指向函数的直接调用者（而非间接调用者）；
如果有new关键字，this指向new出来的那个对象；
在事件中，this指向触发这个事件的对象，






28.实现 sum(a,b) sum(a)(b)同时兼容

29.一个平面上有很多的点，知道它的x,y轴坐标。 如何把这些点连起来，连成最大的面积。(不是连所有的
点，是连某些点使它的面积最大)

30.$.each for区别

31.ajax设置不缓存
1、在请求url后面加上随机数或者时间戳：

例如：ajax.open("get","./service.php？"+Math.random()) 这样每次请求就是不同的请求，每次都要到达服务器。

其实还是都有缓存，只不过每次访问都是唯一的访问，就不会访问到前次访问。最好是加时间戳，时间戳肯定唯一，随机数可能重复。

2、在服务器端设置header头部信息：

　　　　header{"Cache-Control:no-cache"}

　　　　herder{"Pragma:no-cache"}

　　　　header{"Expires:-1"}

　　　　这样就不会再将服务器端返回的数据进行缓存了。

32.jq的ajax设置同步，complete和success区别
complete：要求为Function类型的参数，请求完成后调用的回调函数（请求成功或失败时均调用）。

          参数：XMLHttpRequest对象和一个描述成功请求类型的字符串。

          function(XMLHttpRequest, textStatus){

             this;    //调用本次ajax请求时传递的options参数

          }

success：要求为Function类型的参数，请求成功后调用的回调函数，有两个参数。

         (1)由服务器返回，并根据dataType参数进行处理后的数据。

         (2)描述状态的字符串。

         function(data, textStatus){

            //data可能是xmlDoc、jsonObj、html、text等等

            this;  //调用本次ajax请求时传递的options参数


33.jq的继承方法
原型链继承（对象间的继承）为了让子类继承父类的属性（也包括方法），首先需要定义一个构造函数。然后，将父类的新实例赋值给构造函数的原型。
类式继承（构造函数间的继承）是在子类型构造函数的内部调用超类型的构造函数，是借助已有的对象创建新的对象，将子类的原型指向父类，就相当于加入了父类这条原型链
全局函数apply和call可以用来改变函数中this的指向

用Son.prototype = Object.creat(Father.prototype)
  Son.constructor = Son


34.jq的then用法

f1().then(f2);



35.你封装过哪些组件？

36.毫秒数转化为年月日？

37.css3的新特性你用过哪些？知道哪些？

38.$("div>a") $("div a") 区别？
$("div>a") 获取div的子元素a标签
$("div a") 获取div下的所有a标签

39.怎么实现一个div的拖拽？

40.jq中子页面获取父页面的数据的方法

41.绝对定位，相对定位区别。一般怎么用？

42.flex用过吗？
弹性盒模型
Flex 是 Flexible Box 的缩写，意为"弹性布局
注意，设为 Flex 布局以后，子元素的float、clear和vertical-align属性将失效。
flex-direction
flex-wrap
flex-flow
justify-content
align-items
align-content

43.bootstrap实现原理？栅格用过吗？
媒体查询，在不同的屏幕宽度范围下使用不同的容器宽度。
用过

44.懒加载图片实现原理？
原理即是网页代码中有img标签，但是没有src属性，只是把src原本应该放的图片链接放到另外一个属性值去，比如说data-src，这样浏览器就不能把图片渲染出来。但是可以通过js获取这个图片链接，通过适时把获取到的图片链接赋值给src属性上，这样图片就能在适时的时候渲染出来，而不是一次性全部加载，而是通过鼠标滚动，一个一个加载进来。

45.你怎么看前端最近几年的发a展？谈谈新框架，谈谈h5c3新特性带上来的改变，

46.谈谈vue,angular,react的优缺点？

47.说说gulp的优缺点？除了gulp还用过其他的吗？例如webpack？

48.form的序列化，防止页面跳转

49.自动登录保存一周


50.作用域链
全局函数无法查看局部函数的内部细节，但局部函数可以查看其上层的函数细节，直至全局细节。
 当需要从局部函数查找某一属性或方法时，如果当前作用域没有找到，就会上溯到上层作用域查找，
 直至全局函数，这种组织形式就是作用域链。

一个页面从输入 URL 到页面加载显示完成，这个过程中都发生了什么？（流程说的越详细越好）
 详细版：
  	1、浏览器会开启一个线程来处理这个请求，对 URL 分析判断如果是 http 协议就按照 Web 方式来处理;
  	2、调用浏览器内核中的对应方法，比如 WebView 中的 loadUrl 方法;
      3、通过DNS解析获取网址的IP地址，设置 UA 等信息发出第二个GET请求;
  	4、进行HTTP协议会话，客户端发送报头(请求报头);
      5、进入到web服务器上的 Web Server，如 Apache、Tomcat、Node.JS 等服务器;
      6、进入部署好的后端应用，如 PHP、Java、JavaScript、Python 等，找到对应的请求处理;
  	7、处理结束回馈报头，此处如果浏览器访问过，缓存上有对应资源，会与服务器最后修改时间对比，一致则返回304;
      8、浏览器开始下载html文档(响应报头，状态码200)，同时使用缓存;
      9、文档树建立，根据标记请求所需指定MIME类型的文件（比如css、js）,同时设置了cookie;
      10、页面开始渲染DOM，JS根据DOM API操作DOM,执行事件绑定等，页面显示完成。

    简洁版：
  	浏览器根据请求的URL交给DNS域名解析，找到真实IP，向服务器发起请求；
  	服务器交给后台处理完成后返回数据，浏览器接收文件（HTML、JS、CSS、图象等）；
  	浏览器对加载到的资源（HTML、JS、CSS等）进行语法解析，建立相应的内部数据结构（如HTML的DOM）；
  	载入解析到的资源文件，渲染页面，完成。



Sublime Text 3 + 插件
  Google chrome 查看页面UI、动画效果和交互功能，Firebug 兼容测试和
  Node.js + webpack
  Git 版本控制和Code Review



内存泄露是指你用不到（访问不到）的变量，依然占居着内存空间，不能被再次利用起来。